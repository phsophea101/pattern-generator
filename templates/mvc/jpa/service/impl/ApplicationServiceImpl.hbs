package {{package}}.{{lowerCase service}}.biz.service.impl;

import {{package}}.{{lowerCase service}}.biz.dto.{{titleCase service}}DTO;
import com.wingmoney.web.annotation.PlatformService;
import lombok.RequiredArgsConstructor;
import lombok.SneakyThrows;
import org.springframework.transaction.annotation.Transactional;

@PlatformService(platform = Agri{{titleCase service}}ServiceImpl.PLATFORM)
@RequiredArgsConstructor
public class Agri{{titleCase service}}ServiceImpl extends Abstract{{titleCase service}}Service {
    public static final String PLATFORM = PlatformType.AGRI;
    
    @SneakyThrows
    @Override
    @Transactional(rollbackFor = Exception.class)
    public void create({{titleCase service}}DTO {{lowerCase service}}DTO) {
        
        this.createSample({{lowerCase service}}DTO);
//        TODO
    }
    
    @SneakyThrows
    @Override
    @Transactional(rollbackFor = Exception.class)
    public void update({{titleCase service}}DTO {{lowerCase service}}DTO, String id) {
        
        this.updateSample({{lowerCase service}}DTO, id);
//        TODO
    }
        
}